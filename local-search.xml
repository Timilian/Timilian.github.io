<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>免費搭建個人獨立博客 GCP + Hexo + GitHook</title>
    <link href="/2020/05/04/%E5%85%8D%E8%B2%BB%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2020/05/04/%E5%85%8D%E8%B2%BB%E6%90%AD%E5%BB%BA%E5%80%8B%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>在谷歌雲搭建起了自己的獨立博客，技術方案為GCP + Hexo + Git Hook，期間遇到各種坑花費了我很長時間。網上針對GCP部署Hexo的教程資料較少，因此整理了這一篇GCP免費部署Hexo的小白教程。</p></blockquote><h1 id="準備工作"><a href="#準備工作" class="headerlink" title="準備工作"></a>準備工作</h1><h2 id="1-開通GCP獲得贈金"><a href="#1-開通GCP獲得贈金" class="headerlink" title="1. 開通GCP獲得贈金"></a>1. 開通GCP獲得贈金</h2><p>谷歌雲新用戶會有一年價值$300的贈金，完全足夠部署一個Hexo博客使用一年。所需條件是注冊谷歌雲賬戶，并綁定一張外幣卡。具體教程參見<a href="https://zhuanlan.zhihu.com/p/58960609" target="_blank" rel="noopener">如何注册谷歌云并获得新用户300美刀赠金</a></p><h2 id="2-購買域名"><a href="#2-購買域名" class="headerlink" title="2. 購買域名"></a>2. 購買域名</h2><p>freenom可以提供免費域名，即使需要花錢購買的域名，價格也比GoDaddy要便宜很多，推薦。（值得注意的是，freenom中的賬戶地區信息必須與你的IP匹配，否則將付款失敗）</p><h1 id="本地操作"><a href="#本地操作" class="headerlink" title="本地操作"></a>本地操作</h1><h2 id="1-安装Git"><a href="#1-安装Git" class="headerlink" title="1. 安装Git"></a>1. 安装Git</h2><p>OS為Windows，直接<a href="https://git-scm.com/download" target="_blank" rel="noopener">下載Git客戶端</a>點擊安裝，一路默認選擇即可。Git安裝同時會安裝Git Bash命令行工具，在文件夾中點擊右鍵選擇“Git Bash Here”可直接進入。</p><h2 id="2-安裝Node-js"><a href="#2-安裝Node-js" class="headerlink" title="2. 安裝Node.js"></a>2. 安裝Node.js</h2><p>OS為Windows，進入<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">Nodejs官網</a>下載客戶端LTS版本安裝即可。安裝後，使用“Git Bash Here”進入Git Bash命令行工具，輸入運行</p><pre><code class="hljs bash">$ node -v$ npm -v</code></pre><p>查看到版本説明安裝成功。</p><h2 id="3-安裝Hexo"><a href="#3-安裝Hexo" class="headerlink" title="3. 安裝Hexo"></a>3. 安裝Hexo</h2><p>在你想要存放Hexo工作目錄的文件夾内右鍵進入Git Bash命令行工具，運行命令</p><pre><code class="hljs bash">$ npm install -g hexo-cli</code></pre><p>結束後使用<code>hexo -v</code>查看版本驗證安裝成功。</p><p>成功后需初始化一下Hexo，運行命令</p><pre><code class="hljs bash">$ hexo init hexo-blog //hexo-blog可以任意起名$ <span class="hljs-built_in">cd</span> hexo-blog$ npm install</code></pre><p>初始化完成後，hexo-blog文件夾内產生目錄：</p><ul><li><p>node_modules: 依赖包</p></li><li><p>public：存放生成的页面</p></li><li><p>scaffolds：生成文章的一些模板</p></li><li><p>source：用来存放你的文章</p></li><li><p>themes：主题</p></li><li><p>_config.yml: 博客的配置文件</p></li></ul><p>本地部署Hexo服務，運行命令</p><pre><code class="hljs bash">$ hexo g$ hexo server</code></pre><p>在瀏覽器中輸入<code>localhost:4000</code>，就可以看到初始化博客的模樣：</p><p><img src="/img/post/Hexo-homepage-screenshot.png" srcset="/img/loading.gif" alt=""></p><p>使用ctrl+c關閉服務。</p><h2 id="4-生成密鑰"><a href="#4-生成密鑰" class="headerlink" title="4. 生成密鑰"></a>4. 生成密鑰</h2><p>Git Bash中運行命令</p><pre><code class="hljs bash">$ ssh-keygen -t rsa -C <span class="hljs-string">"hexo"</span> //可任意命名，作爲鏈接gcp時的UserName</code></pre><p>一路回車，最後在<code>~/.ssh</code>文件夾内成功生成文件<code>id_rsa</code>和<code>id_rsa.pub</code>，其中<code>id_rsa</code>為私鑰文件，<code>id_rsa.pub</code>為公鑰文件。</p><h1 id="GCP操作"><a href="#GCP操作" class="headerlink" title="GCP操作"></a>GCP操作</h1><h2 id="1-創建vm实例"><a href="#1-創建vm实例" class="headerlink" title="1. 創建vm实例"></a>1. 創建vm实例</h2><p>Google Cloud Platform導航菜單中選擇<code>Compute Engine</code>–&gt;<code>虛擬機實例/VM instance</code>，并選擇<code>創建/create</code>。選擇需要創建實例的地區、實例配置及系統版本，勾選Http流量/Https流量規則。大陸地區實例地區首選香港或台灣，配置1核1.7G綽綽有餘，系統我選擇的Centos7。可參照下圖：</p><p><img src="/img/post/GCP-create-VMinstance-1.png" srcset="/img/loading.gif" alt=""></p><p><img src="/img/post/GCP-create-VMinstance-2.png" srcset="/img/loading.gif" alt=""></p><p>選擇好后點擊<code>創建/create</code>。稍後列表中將展示創建好的實例：</p><p><img src="/img/post/GCP-VM-instance-list.png" srcset="/img/loading.gif" alt=""></p><h2 id="2-為實例配置SSH登錄"><a href="#2-為實例配置SSH登錄" class="headerlink" title="2. 為實例配置SSH登錄"></a>2. 為實例配置SSH登錄</h2><p>點擊創建好的實例名，進入實例詳情頁，點擊<code>修改/Edit</code>，在<code>SSH密鑰/SSH Keys</code>下<code>顯示和修改/Show and edit</code>中點擊<code>添加一項/Add item</code>，將前文本地生成的<code>id_rsa.pub</code>文件中的内容粘貼進文本框后，點擊<code>保存/Save</code>。</p><p><img src="/img/post/GCP-add-instance-ssh-key.png" srcset="/img/loading.gif" alt=""></p><p>Git Bash中運行</p><pre><code class="hljs bash">$ ssh hexo@34.96.244.178 //hexo替換為密鑰生成時所用UserName，IP替換為你所創建實例的外部IP</code></pre><p>如下圖所示，説明SSH登錄成功。</p><p><img src="/img/post/ssh-link-gcp-success.png" srcset="/img/loading.gif" alt=""></p><p>後續將通過SSH連接到VM實例進行操作。</p><h2 id="3-安裝Git和Nginx"><a href="#3-安裝Git和Nginx" class="headerlink" title="3. 安裝Git和Nginx"></a>3. 安裝Git和Nginx</h2><p>Git Bash通過SSH連接到GCP VM實例，然後運行命令：</p><p>Centos7</p><pre><code class="hljs bash">$ sudo yum install -y git nginx</code></pre><p>Debian/Ubuntu</p><pre><code class="hljs bash">$ sudo apt-get install git nginx</code></pre><h2 id="4-初始化Git倉庫"><a href="#4-初始化Git倉庫" class="headerlink" title="4. 初始化Git倉庫"></a>4. 初始化Git倉庫</h2><p>創建一個文件夾，并初始化為Git倉庫。這裏將其放在<code>/var/repo/blog.git</code>目錄下：</p><pre><code class="hljs bash">$ sudo mkdir /var/repo$ <span class="hljs-built_in">cd</span> /var/repo$ sudo git init --bare blog.git</code></pre><p><code>--bare</code>參數的作用是創建Git裸倉庫，無工作區，適合僅用作共享同步。</p><p>將<code>blog.git</code>目錄擁有者設置爲SSH連接用戶：</p><pre><code class="hljs bash">$ sudo chown -R hexo:hexo blog.git</code></pre><h2 id="5-創建Hexo部署目錄"><a href="#5-創建Hexo部署目錄" class="headerlink" title="5. 創建Hexo部署目錄"></a>5. 創建Hexo部署目錄</h2><p>新建目錄<code>/var/www/hexo</code>用於存儲部署Hexo所需内容</p><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /var/$ sudo mkdir www$ sudo chmod -R 777 www/$ <span class="hljs-built_in">cd</span> www$ sudo mkdir hexo$ sudo chmod -R 777 hexo/</code></pre><h2 id="6-配置Git-Hooks"><a href="#6-配置Git-Hooks" class="headerlink" title="6. 配置Git Hooks"></a>6. 配置Git Hooks</h2><p>Git Hooks的作用是：在本地將博客的最新内容通過Git push到GCP的倉庫后，觸發Git Hooks將最新内容同步至部署目錄，從而達到自動更新部署的目的。</p><p>在 <code>blog.git/hooks</code> 目錄下新建一個 <code>post-receive</code> 文件：</p><pre><code class="hljs bash">$ <span class="hljs-built_in">cd</span> /var/repo/blog.git/hooks$ sudo vim post-receive</code></pre><p>在 <code>post-receive</code> 文件中寫入如下内容：</p><pre><code class="hljs bash">git --work-tree=/var/www/hexo --git-dir=/var/repo/blog.git checkout -f</code></pre><p>为 <code>post-receive</code> 文件設置可執行權限：</p><pre><code class="hljs bash">$ sudo chmod +x post-receive</code></pre><h2 id="7-為域名配置DNS"><a href="#7-為域名配置DNS" class="headerlink" title="7. 為域名配置DNS"></a>7. 為域名配置DNS</h2><p>cloudflare可以提供免費的DNS解析、CDN加速、網站安全管理等功能，該步驟將域名（以<code>hexo-example.tk</code>爲例）的DNS服務商設置為cloudflare。</p><p>登錄cloudflare，點擊右上方<code>Add site</code>，輸入你的域名并選擇free plan后確認。稍等片刻進入DNS record編輯頁面，如下圖將域名與VM實例的IP地址綁定：</p><p><img src="/img/post/cloudflare-add-site-cdn.png" srcset="/img/loading.gif" alt=""></p><p>點擊<code>Continue</code>進入<code>Change your nameservers</code>頁面，該頁面展示了兩個新的Nameserver，需要更新到freenom。</p><p>在freenom的域名列表中點擊域名后的<code>Manage Domain</code>進入管理界面，<code>Management Tools</code>–&gt;<code>Nameservers</code>–&gt;<code>Use custom nameservers</code>，將cloudflare的兩個Nameserver複製到列表中并保存。</p><p>![](/img/post/freenom manage nameservers.png)</p><p>修改成功后回到cloudflare頁面，點擊<code>Done, check nameservers</code>，SSL/TLS encryption mode默認選擇Full并點擊<code>Done</code>。出現下圖界面説明配置成功：（有時需等待幾分鐘）</p><p><img src="/img/post/cloudflare-add-site-cdn-success.png" srcset="/img/loading.gif" alt=""></p><h2 id="8-配置Nginx"><a href="#8-配置Nginx" class="headerlink" title="8. 配置Nginx"></a>8. 配置Nginx</h2><p>在nginx配置目錄<code>/etc/nginx/conf.d/</code>下新建配置文件<code>hexo-blog.conf</code></p><pre><code class="hljs bash">$ sudo vim /etc/nginx/conf.d/hexo-blog.conf</code></pre><p>文件内寫入：</p><pre><code class="hljs bash">server &#123;listen         80;server_name    hexo-example.tk; <span class="hljs-comment"># 填個人域名     </span>root           /var/www/hexo/; <span class="hljs-comment"># 填hexo部署目錄</span>&#125;</code></pre><p>設置nginx守護綫程并啓動：</p><pre><code class="hljs bash">$ sudo systemctl <span class="hljs-built_in">enable</span> nginx$ sudo systemctl start nginx</code></pre><h2 id="9-關閉SELinux"><a href="#9-關閉SELinux" class="headerlink" title="9. 關閉SELinux"></a>9. 關閉SELinux</h2><p>如果你跟我一樣選擇的是Centos系統，還需要關閉SELinux。</p><pre><code class="hljs bash">$ sudo setenforce 0$ sudo sed -i <span class="hljs-string">'s/SELINUX=enforcing/SELINUX=disabled/g'</span> /etc/selinux/config$ sudo reboot</code></pre><p>重新SSH連接并運行以下命令若返回<code>Disabled</code>證明SELinux已關閉。</p><pre><code class="hljs bash">$ getenforce</code></pre><h1 id="部署服務"><a href="#部署服務" class="headerlink" title="部署服務"></a>部署服務</h1><p>本地的Hexo目錄下<code>_config.yml</code>文件中，找到<code>deploy</code>條目，并修改為：</p><pre><code class="hljs bash">deploy:<span class="hljs-built_in">type</span>: gitrepo: hexo@34.96.244.178:/var/repo/blog.gitbranch: master</code></pre><p>注意修改為自己的UserName和IP。之後在該目錄下運行Git Bash并執行：</p><pre><code class="hljs bash">$ hexo clean$ hexo g$ hexo d</code></pre><p>如deploy時報錯<code>ERROR Deployer not found</code>，執行</p><pre><code class="hljs bash">$ npm install hexo-deployer-git --save</code></pre><p>并重新執行上述三個命令。至此，Hexo就成功部署到GCP，可以開開心心地寫博客啦。</p><p>![](/img/post/hexo deploy success.png)</p><h1 id="後續優化"><a href="#後續優化" class="headerlink" title="後續優化"></a>後續優化</h1><h2 id="1-Https安全訪問"><a href="#1-Https安全訪問" class="headerlink" title="1. Https安全訪問"></a>1. Https安全訪問</h2><p>你可能注意到了，博客訪問時瀏覽器提示鏈接是不安全的，若想將網站設置為Https安全訪問，可以通過cloudflare來簡單完成。</p><p>登錄cloudflare，在SSL/TLS設置中<code>SSL/TLS encryption mode</code>選擇<code>Full (strict)</code>，<code>Edge Certificates</code>中HTTPS重定向打開，如圖：</p><p><img src="/img/post/cloudflare-redirect-https.png" srcset="/img/loading.gif" alt=""></p><p><code>Origin Server</code>中點擊<code>Create Certificate</code>按鈕，</p><p><img src="/img/post/cloudflare-create-https-cert.png" srcset="/img/loading.gif" alt=""></p><p>選擇默認設置最終得到<code>Origin Certificate</code>及<code>Private key</code>，在服務器上分別創建文件<code>hexo-example.tk.pem</code>用來存儲<code>Origin Certificate</code>，文件<code>hexo-example.tk.key</code>用來存儲<code>Private key</code>。比如：</p><pre><code class="hljs bash">$ sudo vim /etc/nginx/hexo-example.tk.pem$ sudo vim /etc/nginx/hexo-example.tk.key</code></pre><p>對nginx配置文件進行替換</p><pre><code class="hljs bash">$ sudo mv /etc/nginx/conf.d/hexo-blog.conf /etc/nginx/conf.d/hexo-blog.conf.bak$ sudo vim /etc/nginx/conf.d/hexo-blog.conf</code></pre><p>修改如下：</p><pre><code class="hljs bash">server &#123;    listen                443 ssl;    server_name           hexo-example.tk;    ssl_certificate       /etc/nginx/hexo-example.tk.pem;    ssl_certificate_key   /etc/nginx/hexo-example.tk.key;    location / &#123;        root              /var/www/hexo;        index             index.html index.php;    &#125;&#125;server &#123;    listen                80;    server_name           hexo-example.tk;    <span class="hljs-built_in">return</span> 301            https://<span class="hljs-variable">$server_name</span><span class="hljs-variable">$request_uri</span>;&#125;</code></pre><p>重新加載nginx配置：</p><pre><code class="hljs bash">$ sudo nginx -s reload</code></pre><p>此時訪問博客已變爲HTTPS安全訪問。</p><h2 id="2-更換主題"><a href="#2-更換主題" class="headerlink" title="2. 更換主題"></a>2. 更換主題</h2><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo主題</a>頁内含有300余主題，選擇你喜歡的主題樣式，根據其所提供的説明文檔進行設置即可。比如<a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT</a>，<a href="https://hexo.fluid-dev.com/docs/" target="_blank" rel="noopener">Fluid</a>。</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://zhuanlan.zhihu.com/p/44213627" target="_blank" rel="noopener">hexo超完整的搭建教程，让你拥有一个专属个人博客</a></p><p><a href="https://calton007.github.io/2018/05/08/n-deploy-vps/" target="_blank" rel="noopener">使用 Git Hook 自动部署 Hexo 到个人 VPS</a></p><p><a href="https://medium.com/@souvikhaldar/how-to-add-the-public-ssh-key-to-a-gcp-virtual-machine-ef5703e8e596" target="_blank" rel="noopener">How to add the public SSH key to a GCP Virtual Machine</a></p><p><a href="https://cloud.google.com/compute/docs/instances/adding-removing-ssh-keys#instance-only" target="_blank" rel="noopener">Adding or removing instance-level public SSH keys - GCP</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo gcp</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
